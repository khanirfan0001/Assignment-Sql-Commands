USE sakila;
-- Question 1: 
-- Retrieve the total number of rentals made in the Sakila database.

SELECT COUNT(rental_id)Total_rentals FROM rental;

-- Question 2: 
-- Find the average rental duration (in days) of movies rented from the Sakila database.

SELECT AVG(rental_duration) FROM film;

-- Question 3: 
-- Display the first name and last name of customers in uppercase.

 SELECT UPPER(first_name)first_name,UPPER(last_name)last_name FROM customer;
 
 -- Question 4: 
-- Extract the month from the rental date and display it alongside the rental ID.

SELECT rental_id,MONTH(rental_date)Month FROM rental;

-- Question 5: 
-- Retrieve the count of rentals for each customer (display customer ID and the count of rentals).

SELECT c.customer_id,COUNT(rental_id)rentals FROM customer c JOIN rental  ON
c.customer_id = rental.customer_id GROUP BY customer_id;

-- Question 6: 
-- Find the total revenue generated by each store.

SELECT c.store_id,SUM(amount) revenue FROM payment JOIN customer c 
ON payment.customer_id = c.customer_id GROUP BY store_id;

-- Question 7:
--  Display the title of the movie, customer's first name, and last name who rented it. 

SELECT f.title,c.first_name,c.last_name FROM film f INNER JOIN inventory i ON
f.film_id = i.film_id INNER JOIN rental r ON 
r.inventory_id = i.inventory_id INNER JOIN customer c ON 
c.customer_id = r.customer_id GROUP BY title;

-- Question 8: 
-- Retrieve the names of all actors who have appeared in the film "Gone with the Wind."

SELECT a.first_name,a.last_name FROM actor a INNER JOIN film_actor ac ON
a.actor_id = ac.actor_id INNER JOIN film f ON
f.film_id = ac.film_id WHERE title = "Gone with the Wind" ;



-- Question 1: 
-- Determine the total number of rentals for each category of movies.

SELECT category_id,COUNT(rental_duration) FROM film INNER JOIN film_category fc ON
film.film_id = fc.film_id INNER JOIN  inventory i ON fc.film_id = i.film_id
INNER join rental r ON i.inventory_id = r.inventory_id GROUP BY category_id;

-- Question 2: 
-- Find the average rental rate of movies in each language.

SELECT AVG(rental_rate),l.name FROM film RIGHT JOIN language l 
ON l.language_id = film.language_id GROUP BY name;

--  Question 3: 
-- Retrieve the customer names along with the total amount they've spent on rentals.

SELECT c.first_name,c.last_name,SUM(amount) FROM customer c RIGHT JOIN payment p 
ON c.customer_id = p.customer_id RIGHT JOIN rental r 
ON p.rental_id = r.rental_id group by payment_id;

-- Question 4: 
-- List the titles of movies rented by each customer in a particular city (e.g., 'London').

SELECT f.title,c.first_name,c.last_name,ci.city FROM customer c INNER JOIN address a
ON c.address_id = a.address_id INNER JOIN city ci ON a.city_id = ci.city_id
INNER JOIN rental r ON c.customer_id = r.customer_id INNER JOIN inventory i 
ON r.inventory_id = i.inventory_id INNER JOIN film f ON
f.film_id = i.film_id GROUP BY city;

-- Question 5: 
-- Display the top 5 rented movies along with the number of times they've been rented. 

SELECT title,COUNT(rental_duration)Rented_time FROM film  RIGHT JOIN inventory i 
ON film.film_id = i.film_id RIGHT JOIN rental r 
ON r.inventory_id = i.inventory_id GROUP BY rental_duration 
ORDER BY rental_duration ASC limit 5;

-- Question 6: 
-- Determine the customers who have rented movies from both stores (store ID 1 and store ID 2). 

SELECT c.first_name,c.last_name FROM customer c INNER JOIN rental r ON 
c.customer_id = r.customer_id INNER JOIN inventory i ON
i.inventory_id = r.inventory_id WHERE c.store_id IN (1 AND 2) GROUP BY address_id;